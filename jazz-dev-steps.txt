=======================================================================================
1. SETTING UP BASE-SERVICE AND CREATING A SAMPLE PLUGIN PROJECT USING MAVEN-ARCHETYPE
=======================================================================================

==> Pre-Requisite
	- Setup Java and MVN
	- Setup p2 repo for EWM-SDK 
		https://github.com/jazz-community/jazz-p2-repository-converter
	- Setup Jazz Debug Environment
		https://github.com/jazz-community/jazz-debug-environment
		https://github.com/jazz-community/jazz-debug-environment/wiki
		
==>	jazz-plugin-base-service - https://github.com/jazz-community/jazz-plugin-base-service 
	- Clone this repository 
		git clone https://github.com/jazz-community/jazz-plugin-base-service.git
	- Run mvn command from inside the checked out repository.
		mvn install
	- To execute unit-test, simply execute below command
		mvn integration-test
		
==>	jazz-plugin-maven-archetype - https://github.com/jazz-community/jazz-plugin-maven-archetype
	- Clone this repository
		git clone https://github.com/jazz-community/jazz-plugin-maven-archetype.git
	- Run the setup script
		- Windows Powershell: 
			.\setup.ps1 -group org.jazzcommunity.example -version 0.0.1 -serviceName GitHubExampleService
		- Linux: 
			./setup.sh --group com.jazzcommunity.example --serviceName GitHubExampleService --version 0.0.1
			./setup.sh --group com.alstom.jazz.test --serviceName EnvironmentTestService --version 1.0.0
	- Created a folder structure in /target which is a project to be used
		- To build the plugin files 
			mvn pakage
		- To build and make available in repository
			mvn install
	- Correction generated project is required as still 3.0.3 is used
		- xxxxx.parent\pom.xml
			<version>4.0.0-SNAPSHOT</version>			
		- xxxxx.parent\plugin\META-INF\MANIFEST.MF
			target/dependency/com.siemens.bt.jazz.services.base-4.0.0-SNAPSHOT.jar,
		- xxxxx.parent\test\META-INF\MANIFEST.MF	
			target/dependency/com.siemens.bt.jazz.services.base-4.0.0-SNAPSHOT.jar,
		- HelloWorldService.java and HelloWorldPostService.java
			- Remove import com.siemens.bt.jazz.services.base.rest.parameters.RestRequest;
			- Remove extists constructor and generator new from super()
	- Icrementing Version
		- Run the tycho-versions-plugin from the project root (where the root pom.xml is located).
		- Examples:
			change all version to 1.2.0-SNAPSHOT or 1.2.0.qualifier: 
			mvn org.eclipse.tycho:tycho-versions-plugin:set-version "-DnewVersion=1.2.0-SNAPSHOT"
		
=======================================================================================
2. HOW TO USE ALRADY CREATED PLUGIN-PROJECT WITH JAA-DEBUG-ENVIRONMENT
=======================================================================================

==>	Import plugin project in IntellJ - https://github.com/jazz-community/jazz-debug-environment/wiki/3.3-Using-IntelliJ#using-standalone
	- Import a project from existing sources: 
		File -> New -> Project from Existing Sources
	- Correct projects if not corrected earlier
	
==> Add Jazz Development ENVIRONMENT
	- Add Module from Project Settings
	- 
	
=======================================================================================
4. REMOTE DEBUGGING -
=======================================================================================

==> Debug Configuration - https://github.com/jazz-community/jazz-debug-environment/wiki/3.5-Debugging
	- Go to Run -> Edit Configurations
	- Add a new configuration by pressing the plus button in the upper left hand corner
	- Select the remote debugging template
	- Configurations
		- Mode: Attach to remote JVM
		- Host: localhost
		- Port: 9999
==> Hot Reload - CTRL + F9		

=======================================================================================
4. FAQs
=======================================================================================

==> How to setup project-level config for tycho version
		- Create a file mvn.config under .mvn folder with below content 
			-Dtycho-version=1.7.0
==> spotless command
		- mvn spotless:check
		- mvn spotless:apply

